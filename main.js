!function(){"use strict";class e{constructor(e,t,s,r,i){this._data=e,this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._cardId=e._id,this._isLiked=e.isLiked,this._handleDeleteClick=r,this._handleLikeClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeClick(this)})),this._element.querySelector(".card__trash-icon").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._element.querySelector("#card__preview-button").addEventListener("click",(()=>{this._handleImageClick(this._data)}))}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this.renderLikes(this._isLiked),this._element}removeCard(){this._element.remove()}getId(){return this._cardId}getLikes(){return this._isLiked}renderLikes(e){this._isLiked=e,!0===this._isLiked?this._element.querySelector(".card__like-button").classList.add("card__like-button_active"):this._element.querySelector(".card__like-button").classList.remove("card__like-button_active")}}class t{constructor(e,t){let{items:s,renderer:r}=e;this._data=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._data.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}class s{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close-button")&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonValue=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setLoading(e,t){this._submitButton.textContent=e?t:this._submitButtonValue}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),e.target.reset()}))}}class i{constructor(e,t,s){this._displayName=document.querySelector(e),this._displayJob=document.querySelector(t),this._displayImage=document.querySelector(s)}getUserInfo(){return{title:this._displayName.textContent,description:this._displayJob.textContent}}setUserInfo(e){this._displayName.textContent=e.name,this._displayJob.textContent=e.about,this._displayImage.src=e.avatar}setUserImage(e){this._displayImage.src=e}}class n{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e,t){const s=document.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=document.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}resetValidation(){this.toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}disableSubmitButton=()=>{const e=this._formElement.querySelector(this._submitButtonSelector);e.classList.add(this._inactiveButtonClass),e.disabled=!0};_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},a=document.querySelector("#edit-modal"),l=document.querySelector("#profile-form"),d=document.querySelector("#add-card-form"),c=document.querySelector(".profile__edit-button"),u=document.querySelector(".profile__add-button"),h=(document.querySelector("#confirm-modal"),a.querySelector("#profile-title")),_=a.querySelector("#description"),m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}renderResult(e){return e.ok?e.json():Promise.reject(`'Error:' ${e.status}`)}getInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this.renderResult)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this.renderResult)}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this.renderResult)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url})}).then(this.renderResult)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.renderResult)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.renderResult)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.renderResult)}updateProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this.renderResult)}loadPageResults(){return Promise.all([this.getInitialCards(),this.getInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9a1167a0-01e6-4e49-b3c5-e813c03c355c","Content-Type":"application/json"}});let p,v;m.loadPageResults().then((e=>{let[s,r]=e;console.log(s),console.log(r),p=new t({items:s,renderer:g},".gallery__cards"),p.renderItems(),v=new i(".profile__title",".profile__description",".profile__image"),v.setUserInfo(r)})).catch((e=>console.error(e)));const b=new r("#edit-modal",(function(e){b.setLoading(!0,"Saving..."),m.editProfile(e).then((e=>(b.close(),m.getInfo(),e))).then((e=>v.setUserInfo(e))).catch((e=>console.error(e))).finally((()=>b.setLoading(!1,"Save")))}));b.setEventListeners();const L=new r("#picture-modal",(function(e){L.setLoading(!0,"Saving..."),m.updateProfilePicture(e.profileurl).then((e=>{L.close(),v.setUserImage(e.avatar)})).catch((e=>console.error(e))).finally((()=>b.setLoading(!1,"Save")))}));function g(t){return new e(t,"#card-template",k,y,S).generateCard()}L.setEventListeners(),document.querySelector(".profile-image__edit-button").addEventListener("click",(e=>{e.preventDefault(),L.open()}));const E=new r("#card-modal",(function(e){E.setLoading(!0,"Saving..."),m.addCard(e).then((e=>{p.addItem(e)})).then(E.close()).catch((e=>console.error(e))).finally((()=>E.setLoading(!1,"Create")))}));E.setEventListeners();const f=new class extends s{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button_confirm"),this._submitButtonValue=this._submitButton.textContent}setSubmitAction(e){this._submitAction=e}setLoading(e,t){this._submitButton.textContent=e?t:this._submitButtonValue}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._submitAction()}))}}("#confirm-modal");function y(e){f.open(),f.setSubmitAction((()=>m.deleteCard(e.getId()).then((()=>{f.setLoading(!0,"Saving..."),e.removeCard(),f.close()})).catch((e=>console.error(e))).finally((()=>f.setLoading(!1,"Yes")))))}function S(e){!0===e.getLikes()?m.dislikeCard(e.getId()).then((t=>{e.renderLikes(t.isLiked)})).catch((e=>console.error(e))):m.likeCard(e.getId()).then((t=>{e.renderLikes(t.isLiked)})).catch((e=>console.error(e)))}f.setEventListeners();const C=new class extends s{constructor(e){super(e),this._previewImageDisplay=this._popupElement.querySelector(".modal__image-preview"),this._previewImageText=this._popupElement.querySelector(".modal__image-text")}open(e){this._previewImageDisplay.src=e.link,this._previewImageDisplay.alt=e.name,this._previewImageText.textContent=e.name,super.open()}}("#image-modal");function k(e){C.open(e)}C.setEventListeners(),c.addEventListener("click",(()=>{b.open();const e=v.getUserInfo();h.value=e.title,_.value=e.description,I.resetValidation()})),u.addEventListener("click",(()=>E.open()));const I=new n(o,l);I.enableValidation(),new n(o,d).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,